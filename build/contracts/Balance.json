{
  "contractName": "Balance",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/balance.sol\":\"Balance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/balance.sol\":{\"keccak256\":\"0x88c7598478c9d3636f5899f54ea27eb67061e3c7963b5f95f12f6eeafc192744\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8bac2eb9a87ed4018088be8167a7529a25ce36eb7f58b3ee1117cb5bd4f467d\",\"dweb:/ipfs/QmPVR6XbMJnBrnF8XaQDq6Jm4YvzRaG1dUYAvjh24Zk1dv\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060b78061005f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806312065fe014602d575b600080fd5b60336047565b604051603e91906068565b60405180910390f35b60006104bb905090565b6000819050919050565b6062816051565b82525050565b6000602082019050607b6000830184605b565b9291505056fea264697066735822122036d46f80b1fe22e9a5e44d569bc104527087fc438cc998e20e38cf5da3294d5364736f6c63430008090033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c806312065fe014602d575b600080fd5b60336047565b604051603e91906068565b60405180910390f35b60006104bb905090565b6000819050919050565b6062816051565b82525050565b6000602082019050607b6000830184605b565b9291505056fea264697066735822122036d46f80b1fe22e9a5e44d569bc104527087fc438cc998e20e38cf5da3294d5364736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:431:2",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "51:32:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "61:16:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "72:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "61:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "33:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "43:7:2",
                "type": ""
              }
            ],
            "src": "7:76:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "152:52:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "169:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "191:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_int256",
                          "nodeType": "YulIdentifier",
                          "src": "174:16:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "174:23:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "162:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "162:36:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "162:36:2"
                }
              ]
            },
            "name": "abi_encode_t_int256_to_t_int256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "140:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "147:3:2",
                "type": ""
              }
            ],
            "src": "89:115:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "306:122:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "316:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "328:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "339:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "324:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "324:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "316:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "394:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "407:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "418:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "403:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "403:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_int256_to_t_int256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "352:41:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "352:69:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "352:69:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "278:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "290:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "301:4:2",
                "type": ""
              }
            ],
            "src": "210:218:2"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
      "id": 2,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "57:179:1:-:0;;;100:49;;;;;;;;;;132:10;124:5;;:18;;;;;;;;;;;;;;;;;;57:179;;;;;;",
  "deployedSourceMap": "57:179:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;155:79;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;198:6;223:4;216:11;;155:79;:::o;7:76:2:-;43:7;72:5;61:16;;7:76;;;:::o;89:115::-;174:23;191:5;174:23;:::i;:::-;169:3;162:36;89:115;;:::o;210:218::-;301:4;339:2;328:9;324:18;316:26;;352:69;418:1;407:9;403:17;394:6;352:69;:::i;:::-;210:218;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\ncontract Balance {\n    address owner;\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    function getBalance() public pure returns (int256) {\n        return 1211;\n    }\n}\n",
  "sourcePath": "/Users/hrushi/Projects/Crypto/nft-truffle/contracts/balance.sol",
  "ast": {
    "absolutePath": "project:/contracts/balance.sol",
    "exportedSymbols": {
      "Balance": [
        54
      ]
    },
    "id": 55,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Balance",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 54,
        "linearizedBaseContracts": [
          54
        ],
        "name": "Balance",
        "nameLocation": "66:7:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 36,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "88:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 54,
            "src": "80:13:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 35,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "80:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 44,
              "nodeType": "Block",
              "src": "114:35:1",
              "statements": [
                {
                  "expression": {
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "124:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 40,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "132:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "132:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "124:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "124:18:1"
                }
              ]
            },
            "id": 45,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "111:2:1"
            },
            "returnParameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "114:0:1"
            },
            "scope": 54,
            "src": "100:49:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "206:28:1",
              "statements": [
                {
                  "expression": {
                    "hexValue": "31323131",
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "223:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1211_by_1",
                      "typeString": "int_const 1211"
                    },
                    "value": "1211"
                  },
                  "functionReturnParameters": 49,
                  "id": 51,
                  "nodeType": "Return",
                  "src": "216:11:1"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 53,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "164:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "174:2:1"
            },
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "198:6:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "198:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "197:8:1"
            },
            "scope": 54,
            "src": "155:79:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 55,
        "src": "57:179:1",
        "usedErrors": []
      }
    ],
    "src": "32:205:1"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/balance.sol",
    "exportedSymbols": {
      "Balance": [
        54
      ]
    },
    "id": 55,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Balance",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 54,
        "linearizedBaseContracts": [
          54
        ],
        "name": "Balance",
        "nameLocation": "66:7:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 36,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "88:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 54,
            "src": "80:13:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 35,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "80:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 44,
              "nodeType": "Block",
              "src": "114:35:1",
              "statements": [
                {
                  "expression": {
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "124:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 40,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "132:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "132:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "124:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "124:18:1"
                }
              ]
            },
            "id": 45,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "111:2:1"
            },
            "returnParameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "114:0:1"
            },
            "scope": 54,
            "src": "100:49:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "206:28:1",
              "statements": [
                {
                  "expression": {
                    "hexValue": "31323131",
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "223:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1211_by_1",
                      "typeString": "int_const 1211"
                    },
                    "value": "1211"
                  },
                  "functionReturnParameters": 49,
                  "id": 51,
                  "nodeType": "Return",
                  "src": "216:11:1"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 53,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "164:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "174:2:1"
            },
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "198:6:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "198:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "197:8:1"
            },
            "scope": 54,
            "src": "155:79:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 55,
        "src": "57:179:1",
        "usedErrors": []
      }
    ],
    "src": "32:205:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-05T13:41:14.708Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}