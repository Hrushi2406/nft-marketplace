// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CollectionCreated extends ethereum.Event {
  get params(): CollectionCreated__Params {
    return new CollectionCreated__Params(this);
  }
}

export class CollectionCreated__Params {
  _event: CollectionCreated;

  constructor(event: CollectionCreated) {
    this._event = event;
  }

  get cAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get image(): string {
    return this._event.parameters[2].value.toString();
  }

  get creator(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get metadata(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class UserCreated extends ethereum.Event {
  get params(): UserCreated__Params {
    return new UserCreated__Params(this);
  }
}

export class UserCreated__Params {
  _event: UserCreated;

  constructor(event: UserCreated) {
    this._event = event;
  }

  get uAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get image(): string {
    return this._event.parameters[2].value.toString();
  }

  get twitterUrl(): string {
    return this._event.parameters[3].value.toString();
  }

  get websiteUrl(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class Marketplace extends ethereum.SmartContract {
  static bind(address: Address): Marketplace {
    return new Marketplace("Marketplace", address);
  }
}

export class CreateCollectionCall extends ethereum.Call {
  get inputs(): CreateCollectionCall__Inputs {
    return new CreateCollectionCall__Inputs(this);
  }

  get outputs(): CreateCollectionCall__Outputs {
    return new CreateCollectionCall__Outputs(this);
  }
}

export class CreateCollectionCall__Inputs {
  _call: CreateCollectionCall;

  constructor(call: CreateCollectionCall) {
    this._call = call;
  }

  get name_(): string {
    return this._call.inputValues[0].value.toString();
  }

  get symbol_(): string {
    return this._call.inputValues[1].value.toString();
  }

  get image_(): string {
    return this._call.inputValues[2].value.toString();
  }

  get metadata_(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class CreateCollectionCall__Outputs {
  _call: CreateCollectionCall;

  constructor(call: CreateCollectionCall) {
    this._call = call;
  }
}

export class CreateUserCall extends ethereum.Call {
  get inputs(): CreateUserCall__Inputs {
    return new CreateUserCall__Inputs(this);
  }

  get outputs(): CreateUserCall__Outputs {
    return new CreateUserCall__Outputs(this);
  }
}

export class CreateUserCall__Inputs {
  _call: CreateUserCall;

  constructor(call: CreateUserCall) {
    this._call = call;
  }

  get name_(): string {
    return this._call.inputValues[0].value.toString();
  }

  get image_(): string {
    return this._call.inputValues[1].value.toString();
  }

  get twitterUrl_(): string {
    return this._call.inputValues[2].value.toString();
  }

  get websiteUrl_(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class CreateUserCall__Outputs {
  _call: CreateUserCall;

  constructor(call: CreateUserCall) {
    this._call = call;
  }
}

export class MarketPlaceTransferFromCall extends ethereum.Call {
  get inputs(): MarketPlaceTransferFromCall__Inputs {
    return new MarketPlaceTransferFromCall__Inputs(this);
  }

  get outputs(): MarketPlaceTransferFromCall__Outputs {
    return new MarketPlaceTransferFromCall__Outputs(this);
  }
}

export class MarketPlaceTransferFromCall__Inputs {
  _call: MarketPlaceTransferFromCall;

  constructor(call: MarketPlaceTransferFromCall) {
    this._call = call;
  }

  get cAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get nftOwner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get newOwner(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class MarketPlaceTransferFromCall__Outputs {
  _call: MarketPlaceTransferFromCall;

  constructor(call: MarketPlaceTransferFromCall) {
    this._call = call;
  }
}
